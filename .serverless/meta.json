{
  "/home/kali/Desktop/awsimage": {
    "versionSfCore": null,
    "versionFramework": "4.4.6",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>"
    },
    "composeServiceName": null,
    "servicePath": "/home/kali/Desktop/awsimage",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "s3-image-processing",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "us-east-1",
        "tracing": {
          "lambda": true,
          "apiGateway": true
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "s3:PutObject",
              "s3:GetObject",
              "s3:ListBucket"
            ],
            "Resource": [
              "arn:aws:s3:::s3-image-processing-api",
              "arn:aws:s3:::s3-image-processing-api/*"
            ]
          }
        ],
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "UploadImageLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/s3-image-processing-dev-uploadImage"
              }
            },
            "ProcessImageLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/s3-image-processing-dev-processImage"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "s3-image-processing",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/s3-image-processing-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/s3-image-processing-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "s3:PutObject",
                            "s3:GetObject",
                            "s3:ListBucket"
                          ],
                          "Resource": [
                            "arn:aws:s3:::s3-image-processing-api",
                            "arn:aws:s3:::s3-image-processing-api/*"
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords"
                          ],
                          "Resource": [
                            "*"
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "s3-image-processing",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "UploadImageLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-9e83b20f-aa7d",
                  "S3Key": "serverless/s3-image-processing/dev/1729329049491-2024-10-19T09:10:49.491Z/s3-image-processing.zip"
                },
                "Handler": "handler.uploadImage",
                "Runtime": "nodejs18.x",
                "FunctionName": "s3-image-processing-dev-uploadImage",
                "MemorySize": 1024,
                "Timeout": 6,
                "TracingConfig": {
                  "Mode": "Active"
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UploadImageLogGroup"
              ]
            },
            "ProcessImageLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-9e83b20f-aa7d",
                  "S3Key": "serverless/s3-image-processing/dev/1729329049491-2024-10-19T09:10:49.491Z/s3-image-processing.zip"
                },
                "Handler": "handler.processImage",
                "Runtime": "nodejs18.x",
                "FunctionName": "s3-image-processing-dev-processImage",
                "MemorySize": 1024,
                "Timeout": 6,
                "TracingConfig": {
                  "Mode": "Active"
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ProcessImageLogGroup"
              ]
            },
            "UploadImageLambdaVersionlmh2fy7XZbvAVxNrs2AzaODwNes0ZC2whkrpmi5thw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UploadImageLambdaFunction"
                },
                "CodeSha256": "WopByd3jg6QQAfbYu4mr6cMGJD2Hj7KBIs8fAbJ9TeI="
              }
            },
            "ProcessImageLambdaVersion8T9KcvaT0C2pzQfOeJvt7Syt2FXg6L1N7kx9QWHzE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ProcessImageLambdaFunction"
                },
                "CodeSha256": "WopByd3jg6QQAfbYu4mr6cMGJD2Hj7KBIs8fAbJ9TeI="
              }
            },
            "S3BucketS3imageprocessingapi": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketName": "s3-image-processing-api",
                "NotificationConfiguration": {
                  "LambdaConfigurations": [
                    {
                      "Event": "s3:ObjectCreated:Put",
                      "Function": {
                        "Fn::GetAtt": [
                          "ProcessImageLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Filter": {
                        "S3Key": {
                          "Rules": [
                            {
                              "Name": "prefix",
                              "Value": "uploads/"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "DependsOn": [
                "ProcessImageLambdaPermissionS3imageprocessingapiS3"
              ]
            },
            "ProcessImageLambdaPermissionS3imageprocessingapiS3": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ProcessImageLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "s3.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::s3-image-processing-api"
                    ]
                  ]
                },
                "SourceAccount": {
                  "Ref": "AWS::AccountId"
                }
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "s3-image-processing-api",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceUpload": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "upload",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUploadOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUpload"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUploadPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUpload"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UploadImageLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UploadImageLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1729329015612": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodUploadOptions",
                "ApiGatewayMethodUploadPost"
              ]
            },
            "UploadImageLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UploadImageLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-9e83b20f-aa7d",
              "Export": {
                "Name": "sls-s3-image-processing-dev-ServerlessDeploymentBucketName"
              }
            },
            "UploadImageLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UploadImageLambdaVersionlmh2fy7XZbvAVxNrs2AzaODwNes0ZC2whkrpmi5thw"
              },
              "Export": {
                "Name": "sls-s3-image-processing-dev-UploadImageLambdaFunctionQualifiedArn"
              }
            },
            "ProcessImageLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ProcessImageLambdaVersion8T9KcvaT0C2pzQfOeJvt7Syt2FXg6L1N7kx9QWHzE"
              },
              "Export": {
                "Name": "sls-s3-image-processing-dev-ProcessImageLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-s3-image-processing-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "uploadImage": {
          "handler": "handler.uploadImage",
          "events": [
            {
              "http": {
                "path": "upload",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "s3-image-processing-dev-uploadImage",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "UploadImageLambdaVersionlmh2fy7XZbvAVxNrs2AzaODwNes0ZC2whkrpmi5thw"
        },
        "processImage": {
          "handler": "handler.processImage",
          "events": [
            {
              "s3": {
                "bucket": "s3-image-processing-api",
                "event": "s3:ObjectCreated:Put",
                "rules": [
                  {
                    "prefix": "uploads/"
                  }
                ]
              }
            }
          ],
          "name": "s3-image-processing-dev-processImage",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "ProcessImageLambdaVersion8T9KcvaT0C2pzQfOeJvt7Syt2FXg6L1N7kx9QWHzE"
        }
      },
      "resources": {
        "Resources": {
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "s3-image-processing-api"
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "service: s3-image-processing\n\nprovider:\n  name: aws\n  runtime: nodejs18.x\n  region: us-east-1\n  tracing:\n    lambda: true\n    apiGateway: true\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - s3:PutObject\n        - s3:GetObject\n        - s3:ListBucket\n      Resource:\n        - arn:aws:s3:::s3-image-processing-api\n        - arn:aws:s3:::s3-image-processing-api/*\n\nfunctions:\n  uploadImage:\n    handler: handler.uploadImage\n    events:\n      - http:\n          path: upload\n          method: post\n          cors: true\n\n  processImage:\n    handler: handler.processImage\n    events:\n      - s3:\n          bucket: s3-image-processing-api\n          event: s3:ObjectCreated:Put\n          rules:\n            - prefix: uploads/\n\nresources:\n  Resources:\n    ApiGatewayRestApi:\n      Type: AWS::ApiGateway::RestApi\n      Properties:\n        Name: \"s3-image-processing-api\"\n\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "52f46bf01d4dfee5ce2c5c818790c9d1",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "7e62cc06-3d3e-437b-ae5a-ceab09c52ae2",
    "orgName": "awsimage1",
    "userId": "ymrPCb3njfsFrcBwpF",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "awsimage1",
    "subscription": null,
    "userEmail": "codinghero91@gmail.com",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "039612864808",
    "projectType": "traditional",
    "versionSf": "4.4.6",
    "serviceProviderAwsCfStackName": "s3-image-processing-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:us-east-1:039612864808:stack/s3-image-processing-dev/f9c396a0-8dfa-11ef-b260-0affc360847d",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:039612864808:stack/s3-image-processing-dev/f9c396a0-8dfa-11ef-b260-0affc360847d",
    "serviceProviderAwsCfStackCreated": "2024-10-19T09:17:34.457Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "UploadImageLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:039612864808:function:s3-image-processing-dev-uploadImage:4",
        "Description": "Current Lambda function version",
        "ExportName": "sls-s3-image-processing-dev-UploadImageLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ProcessImageLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:039612864808:function:s3-image-processing-dev-processImage:4",
        "Description": "Current Lambda function version",
        "ExportName": "sls-s3-image-processing-dev-ProcessImageLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://cxyttlyob7.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-s3-image-processing-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-9e83b20f-aa7d",
        "ExportName": "sls-s3-image-processing-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}